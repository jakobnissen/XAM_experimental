

XAM Done:
Remove hasflag (mandatory both in SAM and BAM)
Remove isfilled() checks from all BAM operations.
For BAM, all hasX should return a Bool
Fix hasnextrefname
RNAME should be able to be read even when read is unmapped (as per specs 1.4.3)
Methods now return missing if information is not available.
An empty BAM record is now a legitimate BAM record
BAM.seqname_length now returns the true length instead of length + 1
Implemented get(::Record, tag, default)
Implemented pop!(::Record, tag) and pop!(::Record, tag default)
Implemented delete!(::Record, tag)
Implemented setindex!(::Record, tag, value)
Deleted AuxValue object
auxvalues(::Record) now returns a dict
Fields of BAM object are now 1:1 with BAM file specs

XAM Todo:

OPTIMIZE LOADAUXTYPE USING TUPLE LOOKUP - FASTER THAN CURRENT CODE?

== Find out the dependencies

=== Move tests to own files

=== Change SAM interface to follow the BAM one

=== Make display of SAM and BAM records identical
	- Sam should not display = in next_reference, but same name

=== Add an interface for creating SAM and BAM headers more easily
	- update_header(header, [segments])
	- create_header(segments)


	New interfaces:
		S Perhaps make an interface to add SQ headers from seq of records

	Docs:
		Update docs about how to write BAM files: Currently formatting errors, and doesn't mention header in example code

	Bugfixes:
		sam/metainfo/func MetaInfo should check that tag is two characters.
		Also, no newline in comments. No checks in general for bad headers!
		function record/isnextmapped(record::Record)::Bool: FLAG_MUNMAP should be SAM.FLAG_MUNMAP, has no tests

	Optimizations:
		Next_tag_position can be made slightly more efficient (lookup rather than branches) (small gains, too)

	Misc changes
		S The different functions checking BAM flags are inconsistently implemented. Redo them.
		S SAM & BAM: hasflag(record) is redundant with isfilled(record)

		metainfo/findkey and record/findkey and aux/findkey should return nothing rather than 0 when no key
		BAM reader: Add check that the indices are not longer than number of refs

hasrefid returns isfilled, not if it has ref id
hasrefname same
hasposition returns same BUT not hasrightposition
BUT refname DOES check whether it has refname, meaning you can have hasrefname() true, yet error on refname()
same dilemma with hasnextrefname/nextrefname
